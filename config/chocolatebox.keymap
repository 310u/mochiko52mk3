#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE   0
#define MOD1   1
#define MOUSE  2
#define SCROLL 3
#define BT_LAYER 4
#define CAD_MOUSE 5

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <225>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <200>;
};

/ {
    behaviors {
        soff: soft_off {
            compatible = "zmk,behavior-soft-off";
            #binding-cells = <0>;
            hold-time-ms = <3000>;
        };

        lt_atok: lt_atok {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_ATOK";
            bindings = <&lt>, <&atok>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Combo1 {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0>;
        };

        rbkt {
            bindings = <&kp RBKT>;
            key-positions = <20 21>;
            layers = <0>;
        };

        lbkt {
            bindings = <&kp LBKT>;
            key-positions = <19 20>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <9 10>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BSLH>;
            key-positions = <10 11>;
            layers = <0>;
        };

        bt_layer {
            bindings = <&mo 4>;
            key-positions = <47 48>;
            layers = <0>;
        };

        scroll_layer {
            bindings = <&mo 3>;
            key-positions = <38 47>;
            layers = <2>;
        };

        esc_mouse {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <2>;
        };

        codeclick {
            bindings = <&kp F4>;
            key-positions = <27 28>;
            layers = <2>;
        };
    };

    macros {
        atok: atok {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        shift_mb3: shift_mb3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &mkp MB3>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MB3 &kp LSHFT>;
        };

        tab_fwd: tab_fwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp LSHIFT &kp PAGE_DOWN>;
            label = "TAB_FWD";
        };

        tab_back: tab_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp LSHIFT &kp PG_UP>;
            label = "TAB_BACK";
        };

        ctrl_mb3: ctrl_mb3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &mkp MB3>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp MB3 &kp LCTRL>;

            label = "CTRL_MB3";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp N1      &kp N2       &kp N3    &kp N4  &kp N5     &kp N6     &kp N7        &kp N8    &kp N9     &kp N0    &kp MINUS         &kp EQUAL
            &kp Q        &kp W     &kp E   &kp R      &kp T      &kp Y         &kp U     &kp I      &kp O     &kp P             &kp ENTER
            &mt LCTRL A  &kp S     &kp D   &kp F      &kp G      &kp H         &kp J     &kp K      &kp L     &kp SEMICOLON
&kp LSHIFT  &kp Z        &kp X     &kp C   &kp V      &kp B      &kp N         &kp M     &kp COMMA  &kp DOT   &mt RSHIFT SLASH
            &kp LGUI     &kp LALT          &kp SPACE  &lt 1 TAB  &lt_atok 1 0  &kp BSPC             &kp RALT  &kp RCTRL
            >;
        };

        mod_layer {
            display-name = "MOD1";
            bindings = <
&kp F1  &kp F2     &kp F3    &kp F4    &kp F5     &kp F6      &kp F7        &kp F8      &kp F9     &kp F10    &kp F11     &kp F12
        &kp TAB    &kp HOME  &kp UP    &kp PG_UP  &kp KP_NUM  &kp KP_N7     &kp KP_N8   &kp KP_N9  &kp LBKT   &kp RBKT    &trans
        &kp LCTRL  &kp LEFT  &kp DOWN  &kp RIGHT  &trans      &kp KP_N4     &kp KP_N5   &kp KP_N6  &kp PLUS   &kp SQT
&trans  &trans     &kp END   &kp INS   &kp PG_DN  &mo 3       &kp KP_N1     &kp KP_N2   &kp KP_N3  &kp KP_N0  &kp RSHIFT
        &trans     &trans              &trans     &kp TAB     &kp CAPSLOCK  &kp DELETE             &trans     &trans
            >;
        };

        mouse_layer {
            display-name = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans      &trans    &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans      &trans    &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &ctrl_mb3   &mkp MB3  &trans    &trans  &trans  &trans  &trans
&trans  &mo 3   &trans  &trans  &shift_mb3  &mo 3     &trans    &trans  &trans  &trans  &trans
        &trans  &trans          &trans      &mkp MB1  &mkp MB2  &trans          &trans  &trans
            >;
        };

        scroll_layer {
            display-name = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans      &trans    &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans      &trans    &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &ctrl_mb3   &mkp MB3  &trans    &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &shift_mb3  &trans    &trans    &trans  &trans  &trans  &trans
        &trans  &trans          &trans      &mkp MB1  &mkp MB2  &trans          &trans  &trans
            >;
        };

        bt_layer {
            bindings = <
&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans     &bt BT_CLR  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_DISC 0  &bt BT_SEL 0
              &soff         &trans        &trans        &soft_off  &trans      &trans         &trans         &trans         &trans         &trans         &trans
              &trans        &trans        &trans        &trans     &trans      &trans         &trans         &trans         &out OUT_BLE   &out OUT_USB
&trans        &trans        &trans        &trans        &trans     &trans      &trans         &trans         &trans         &trans         &trans
              &trans        &trans                      &trans     &trans      &trans         &trans                        &trans         &trans
            >;
        };
    };
};
